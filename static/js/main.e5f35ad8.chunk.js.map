{"version":3,"sources":["reportWebVitals.js","comp/class1/Calculator.js","comp/class2/calculator2.js","comp/class1/userinput.js","comp/class3/mapper.js","comp/class4/lifecle.js","comp/class4/input2.js","comp/class4/toDolist.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Calculator","React","Component","props","handleSum","setState","sum","alert","parseInt","val1","val2","handleSub","sub","handleMul","mult","handleDiv","div","handleClc","num1","num2","state","className","onClick","this","Todolist","handleChange","e","item","target","value","handleDelete","index","temp","task","ele","splice","console","log","temp2","task1","push","task2","handlePush","Grid","classname","container","direction","justify","alignItems","TextField","id","label","onChange","Button","variant","color","style","margin","justifyContent","length","map","single","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5f35ad8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport \"../class1/style.css\"\r\n// import UserInput from \"./userinput.js\"\r\nexport default class Calculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // num1:'',\r\n            // num2:'',\r\n            sum:0,\r\n            div:0,\r\n            sub:0,\r\n            mult:0,\r\n            \r\n        }\r\n    }\r\n\r\n    // handleNum1 = (e) => {\r\n    //     this.setState({\r\n    //         num1:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // handleNum2 = (e) => {\r\n    //     this.setState({\r\n    //         num2:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    handleSum = () =>{\r\n        this.setState({\r\n            sum: alert(parseInt(this.props.val1) + parseInt(this.props.val2)) \r\n           \r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleSub = () =>{\r\n        this.setState({\r\n            sub: alert(parseInt(this.props.val1) - parseInt(this.props.val2)) \r\n        })\r\n\r\n    }\r\n\r\n    handleMul = () =>{\r\n        this.setState({\r\n            mult: alert( parseInt(this.props.val1) * parseInt(this.props.val2))\r\n        })\r\n\r\n    }\r\n\r\n    handleDiv = () =>{\r\n        this.setState({\r\n            div: alert(parseInt(this.props.val1) / parseInt(this.props.val2))\r\n        })\r\n\r\n    }\r\n\r\n    handleClc = () =>{\r\n        this.setState({\r\n            num1:'',\r\n            num2:'',\r\n            sum:0,\r\n            div:0,\r\n            sub:0,\r\n            mult:0\r\n\r\n        })\r\n\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div  >\r\n                 \r\n                  {/* <div  className =\"input-data\">\r\n                   <div className =\"first-input\">\r\n                       <input   placeholder=\"enter a first  number\" value={this.state.num1}onChange={this.handleNum1}/>\r\n                       </div>\r\n                   \r\n                    <input\r\n                     placeholder=\"enter a second  number\"value={this.state.num2}onChange={this.handleNum2}/>\r\n                   \r\n                    \r\n                  </div> */}\r\n                 \r\n                 \r\n              \r\n                \r\n               <div className = \"button\" >\r\n                   <button className =\"add-button\" onClick={this.handleSum}  >\r\n                      ADD \r\n                 </button>\r\n\r\n                 <button className =\"sub-button\"onClick={(this.handleSub)}>\r\n                     SUBSTRACT\r\n                 </button> \r\n                 <button className =\"mul-button\" onClick={this.handleMul}>\r\n                     MULTIPLY\r\n                 </button>\r\n                 <button className =\"div-button\" onClick={this.handleDiv}>\r\n                      DIVIDE\r\n                 </button>\r\n\r\n                 <button className =\"clc-button\" onClick={this.handleClc}>\r\n                      CLEAR\r\n                 </button> \r\n                </div>\r\n            <div>\r\n               \r\n            </div>\r\n\r\n                            \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"../class1/style.css\"\r\nexport default class Calculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            num1:'',\r\n            num2:'',\r\n            sum: \"\",\r\n            aveg :\"\",\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    handleNum1 = (e) => {\r\n        this.setState({\r\n            num1:e.target.value\r\n        })\r\n    }\r\n\r\n    handleNum2 = (e) => {\r\n        this.setState({\r\n            num2:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSum = () =>{\r\n        this.setState({\r\n            sum: parseInt(this.state.num1) + parseInt(this.state.num2)\r\n           \r\n        },() => {\r\n            \r\n            this.setState({\r\n                aveg : (this.state.sum)/2\r\n            })\r\n        }\r\n        )\r\n\r\n    }\r\n    handleaveg = () =>{\r\n        alert(this.state.aveg)\r\n    }\r\n\r\n\r\n   \r\n\r\n    handleClc = () =>{\r\n        this.setState({\r\n            num1:'',\r\n            num2:'',\r\n            sum : '',\r\n           aveg :\"\"\r\n\r\n        })\r\n\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div  className = \"main-div\" >\r\n                 \r\n                  <div  className =\"input-data\">\r\n                    <div className =\"first-input\">\r\n                       <input   placeholder=\"enter a first  number\" value={this.state.num1}onChange={this.handleNum1}/>\r\n                       </div>\r\n                   \r\n                     <input\r\n                      placeholder=\"enter a second  number\"value={this.state.num2}onChange={this.handleNum2}/>\r\n                   \r\n                    \r\n                    </div>\r\n                 \r\n                    \r\n          <div className = 'res'>\r\n              Avereage :  { this.state.aveg} <br/>\r\n        \r\n               Sum  :  {this.state.sum}\r\n               </div>\r\n            \r\n                      \r\n              \r\n                \r\n               <div className = \"button\" >\r\n                   <button className =\"add-button\" onClick={this.handleSum}  >\r\n                      ADD \r\n                 </button>\r\n\r\n                \r\n\r\n                 <button className =\"clc-button\" onClick={this.handleClc}>\r\n                      CLEAR\r\n                 </button> \r\n                </div>\r\n               \r\n           \r\n                                         \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport \"../class1/style.css\"\r\nimport Calculator from \"./Calculator\"\r\nexport default class UserInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            num1:\"\",\r\n            num2:\"\"\r\n           \r\n            \r\n        }\r\n       \r\n    }\r\n    handleNum1 = (e) => {\r\n        this.setState({\r\n            num1:e.target.value\r\n        })\r\n    }\r\n\r\n    handleNum2 = (e) => {\r\n        this.setState({\r\n            num2:e.target.value\r\n        })\r\n    }\r\n  render(){\r\n      return(\r\n          <div className = \"main-div\">\r\n              <span style = {{fontSize :30}} > Calculator</span>\r\n              <div  className =\"input-data\">\r\n                  <div className =\"first-input\">\r\n                      <input  placeholder=\"enter a first  number\" value={this.state.num1}onChange={this.handleNum1}/>\r\n                  </div>\r\n                       <input   placeholder=\"enter a second  number\"value={this.state.num2} onChange={this.handleNum2}/>\r\n          \r\n        \r\n                    <Calculator val1 = {this.state.num1} val2 = {this.state.num2}/>\r\n              </div>\r\n          </div>\r\n        \r\n      )\r\n  }\r\n    \r\n}","import React from 'react';\r\nexport default class Mapper extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arr: [\r\n                {\r\n                    name: \" Akash sir \",\r\n                    codes: \"React JS\"\r\n                },\r\n\r\n                {\r\n                    name: \"Girish sir\",\r\n                    codes: \"Node JS\"\r\n                },\r\n                {\r\n                    name: \"Sunny sir\",\r\n                    codes: \"Angular JS\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleInput1 = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n\r\n        })\r\n    }\r\n\r\n    handleInput2 = (e) => {\r\n        this.setState({\r\n            codes: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleAdd = () => {\r\n        var temp = this.state.arr;\r\n        temp.push({\r\n            name: this.state.name,\r\n            codes: this.state.codes\r\n        })\r\n        this.setState({\r\n            arr: temp,\r\n            name: \"\",\r\n            codes: \"\"\r\n        })\r\n\r\n    }\r\n\r\n   \r\n\r\n    handleDelete = (e, index) => {\r\n        var temp=this.state.arr\r\n        temp.splice(index,1)\r\n        this.setState({\r\n            arr:temp\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"main-div\">\r\n               <span style = {{fontSize :30}} > Mapper List</span>\r\n                {this.state.arr.map((single, index) => {\r\n                    return (\r\n                        <div className = \"res\">\r\n                            {single.name} -- {single.codes}   <button className = \"delete\"  onClick={(e) => {\r\n                                        this.handleDelete(e, index)\r\n                                    }}>Delete</button>\r\n                                \r\n                        </div>\r\n                    )\r\n                })}\r\n                 <div>\r\n                     <div className = \"button\">\r\n                     <input   value={this.state.name} onChange={this.handleInput1} />\r\n                <input  className = \"mapper-input\"  value={this.state.Domain} onChange={this.handleInput2} />\r\n\r\n                <button className = \"add-button\" disabled={this.state.name === \"\"?true:false} onClick={this.handleAdd}>\r\n                    ADD\r\n                </button>\r\n                     </div>\r\n               \r\n                 </div>\r\n               \r\n                \r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"../class1/style.css\"\r\n\r\n\r\nexport default class Lifecycle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n    }\r\n  }\r\n \r\n  \r\n\r\n  componentDidUpdate() {\r\n      if(this.state.value !== this.props.value){\r\n        this.setState({\r\n          value : this.props.value\r\n        })\r\n      }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className = \"main-div\">\r\n       \r\n<div className = \"button\">\r\n{ this.props.value}\r\n</div>\r\n   \r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport lifecle from \"./lifecle.js\"\r\nexport default class Input2 extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            value:\"\",\r\n            \r\n           \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    \r\n    handleValue= (e) => {\r\n        this.setState({\r\n            Value:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              \r\n              <span style = {{fontSize :30}} > Car list</span>\r\n        <label for=\"cars\">Choose a car:</label>\r\n\r\n<select onChange = {this.handleChange}  value ={this.state.value}name=\"cars\" id=\"cars\">\r\n  <option value=\"volvo\">Volvo</option>\r\n  <option value=\"saab\">Saab</option>\r\n  <option value=\"mercedes\">Mercedes</option>\r\n  <option value=\"audi\">Audi</option>\r\n</select>\r\n\r\n<lifecle value = {this.state.value}/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport \"./todolist.css\"\r\nexport default class Todolist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: [\"Clean dishes\"],\r\n      task1: [],\r\n      item: \"\",\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      item: e.target.value,\r\n    });\r\n  };\r\n  handleDelete = (e, index) => {\r\n    var temp = this.state.task;\r\n    var ele = temp.splice(index, 1);\r\n    console.log(ele[0]);\r\n    var temp2 = this.state.task1;\r\n    temp2.push(ele[0]);\r\n    this.setState({\r\n      task2: temp2,\r\n      task: temp,\r\n    });\r\n  };\r\n  handlePush = () => {\r\n    var temp = this.state.task;\r\n    temp.push(this.state.item);\r\n    this.setState({\r\n      task: temp,\r\n      item: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid classname = \"input\" container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Enter the task to be done\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={this.handlePush}\r\n            style={{\r\n                margin: 20,\r\n                justifyContent: \"center\"\r\n            }}\r\n            \r\n            \r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n        >\r\n            <Grid>\r\n            {this.state.task.length === 0 ?\r\n                    <h2> Completed</h2> :\r\n                    <h2>Tasks</h2>}\r\n                <div className = \"completed\">\r\n                    <ul >\r\n                        {this.state.task.map((single, index) => {\r\n                            return (\r\n                                <li>\r\n                                    {single}<br/><Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={(e) => {\r\n                                        this.handleDelete(e, index, single)\r\n                                    }}>Completed</Button>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </Grid>\r\n\r\n                <Grid>\r\n                {this.state.task1.length === 0 ?\r\n                    <h2> Completed</h2> :\r\n                    <h2> task</h2>}\r\n                <div className = \"completed\">\r\n                    <ul >\r\n                        {this.state.task1.map((single, index) => {\r\n                            return (\r\n                                <li>\r\n                                  <strike>{single}<br/></strike>  \r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Calculator2 from \"./comp/class2/calculator2\"\nimport UserInput from \"./comp/class1/userinput.js\"\nimport Mapper from \"./comp/class3/mapper.js\"\nimport Lifecycle from \"./comp/class4/lifecle\"\nimport Input2 from \"./comp/class4/input2\"\nimport Todolist from \"./comp/class4/toDolist.js\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <Todolist/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}